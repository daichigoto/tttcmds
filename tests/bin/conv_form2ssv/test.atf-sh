#!/usr/bin/env atf-sh
# 
#  Copyright (c) 2017,2018 Daichi GOTO
#  All rights reserved.
#  
#  Redistribution and use in source and binary forms, with or without
#  modifigation, are permitted provided that the following conditions are 
#  met: 
#  
#  1. Redistributions of source code must retain the above copyright 
#     notice, this list of conditions and the following disclaimer. 
#  2. Redistributions in binary form must reproduce the above copyright 
#     notice, this list of conditions and the following disclaimer in the 
#     documentation and/or other materials provided with the distribution. 
#  
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#  

atf_test_case get_application_x_www_form_urlencoded
get_application_x_www_form_urlencoded_head() {
	atf_set "descr" "Verify a GET application/x-www-form-urlencoded process"
}

get_application_x_www_form_urlencoded_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/get_1.out \
		-x "env" \
		   "REQUEST_METHOD=GET" \
		   "QUERY_STRING='UID=000000&REQUEST=%E5%8F%97%E6%B3%A8%E5%86%85%E5%AE%B9%E3%83%9A%E3%83%BC%E3%82%B8&GYOMUID=036591&GENBAID=&%22SAGYO+BI%22=%222017+01+01%22&TEXTAREA=%E3%81%93%E3%81%93%E3%81%AB+%E3%81%A7+__+%E3%83%95%E3%82%A9%E3%83%AB%E3%83%88%27%E3%81%AE%E5%80%A4&TEXTAREA2='" \
		   "conv_form2ssv"
}

atf_test_case post_application_x_www_form_urlencoded
post_application_x_www_form_urlencoded_head() {
	atf_set "descr" "Verify a POST application/x-www-form-urlencoded process"
}

post_application_x_www_form_urlencoded_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/post_1.out \
		-x "cat $(atf_get_srcdir)/application_x-www-form-urlencoded.in |" \
		   "env" \
		   "REQUEST_METHOD=POST" \
		   "CONTENT_TYPE=application/x-www-form-urlencoded" \
		   "CONTENT_LENGTH=257" \
		   "conv_form2ssv"
}

atf_test_case post_multipart_form_data
post_multipart_form_data_head() {
	atf_set "descr" "Verify a POST multipart/form-data process"
}

post_multipart_form_data_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/post_2.out \
		-x "cat $(atf_get_srcdir)/multipart_form-data.in |" \
		   "env" \
		   "REQUEST_METHOD=POST" \
		   "CONTENT_TYPE=multipart/form-data" \
		   "CONTENT_LENGTH=789" \
		   "conv_form2ssv"
}

atf_test_case empty_post_application_x_www_form_urlencoded
empty_post_application_x_www_form_urlencoded_head() {
	atf_set "descr" "Verify an empty POST application/x-www-form-urlencoded process"
}

empty_post_application_x_www_form_urlencoded_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty.out \
		-x "cat /dev/null |" \
		   "env" \
		   "REQUEST_METHOD=POST" \
		   "CONTENT_TYPE=application/x-www-form-urlencoded" \
		   "CONTENT_LENGTH=0" \
		   "conv_form2ssv"
}

atf_init_test_cases()
{
	atf_add_test_case get_application_x_www_form_urlencoded
	atf_add_test_case post_application_x_www_form_urlencoded
	atf_add_test_case post_multipart_form_data
	atf_add_test_case empty_post_application_x_www_form_urlencoded
}
