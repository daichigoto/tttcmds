#!/usr/bin/env atf-sh
# 
#  Copyright (c) 2016,2017,2019 Daichi GOTO
#  All rights reserved.
#  
#  Redistribution and use in source and binary forms, with or without
#  modifigation, are permitted provided that the following conditions are 
#  met: 
#  
#  1. Redistributions of source code must retain the above copyright 
#     notice, this list of conditions and the following disclaimer. 
#  2. Redistributions in binary form must reproduce the above copyright 
#     notice, this list of conditions and the following disclaimer in the 
#     documentation and/or other materials provided with the distribution. 
#  
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#  

atf_test_case empty
empty_head() {
	atf_set "descr" "Verify an empty file"
}

empty_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "gyo_delete 1=k $(atf_get_srcdir)/empty.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "gyo_delete 1=k < $(atf_get_srcdir)/empty.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "cat $(atf_get_srcdir)/empty.in |" \
		   "gyo_delete 1=k"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "cat $(atf_get_srcdir)/empty.in |" \
		   "gyo_delete 1=k -"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "gyo_delete 1/10=k $(atf_get_srcdir)/empty.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "gyo_delete 10/1=k $(atf_get_srcdir)/empty.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "gyo_delete 1=k" \
		   "$(atf_get_srcdir)/empty.in" \
		   "$(atf_get_srcdir)/empty.in" \
		   "$(atf_get_srcdir)/empty.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "gyo_delete 5=k 1=k 3=k " \
		   "$(atf_get_srcdir)/empty.in" \
		   "$(atf_get_srcdir)/empty.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_2.out \
		-x "gyo_delete 5=k 1=k 3=k " \
		   "$(atf_get_srcdir)/empty.in" \
		   "$(atf_get_srcdir)/empty.in" \
		   "$(atf_get_srcdir)/data_without_eor.in" \
		   "$(atf_get_srcdir)/empty.in"
}

atf_test_case opt_s_empty
opt_s_empty_head() {
	atf_set "descr" "Verify an empty file (with -s)"
}

opt_s_empty_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "gyo_delete -s 1=k $(atf_get_srcdir)/empty.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "gyo_delete -s 1=k < $(atf_get_srcdir)/empty.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "cat $(atf_get_srcdir)/empty.in |" \
		   "gyo_delete -s 1=k"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "cat $(atf_get_srcdir)/empty.in |" \
		   "gyo_delete -s 1=k -"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "gyo_delete -s 1=k" \
		   "$(atf_get_srcdir)/empty.in" \
		   "$(atf_get_srcdir)/empty.in" \
		   "$(atf_get_srcdir)/empty.in"
}

atf_test_case a_with_eor
a_with_eor_head() {
	atf_set "descr" "Verify a normal file including a LF before EoF"
}

a_with_eor_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_1.out \
		-x "gyo_delete 1=k $(atf_get_srcdir)/a_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_1.out \
		-x "gyo_delete 1=k < $(atf_get_srcdir)/a_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_1.out \
		-x "cat $(atf_get_srcdir)/a_with_eor.in |" \
		   "gyo_delete 1=k"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_1.out \
		-x "cat $(atf_get_srcdir)/a_with_eor.in |" \
		   "gyo_delete 1=k -"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_1.out \
		-x "gyo_delete 1/10=k $(atf_get_srcdir)/a_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_1.out \
		-x "gyo_delete 10/1=k $(atf_get_srcdir)/a_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_2.out \
		-x "gyo_delete 1=k" \
		   "$(atf_get_srcdir)/a_with_eor.in" \
		   "$(atf_get_srcdir)/a_with_eor.in" \
		   "$(atf_get_srcdir)/a_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_3.out \
		-x "gyo_delete 5=k 1=k 3=k" \
		   "$(atf_get_srcdir)/a_with_eor.in" \
		   "$(atf_get_srcdir)/a_with_eor.in"
}

atf_test_case opt_s_a_with_eor
opt_s_a_with_eor_head() {
	atf_set "descr" "Verify a normal file including a LF before EoF (with -s)"
}

opt_s_a_with_eor_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_1.out \
		-x "gyo_delete -s 1=k $(atf_get_srcdir)/a_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_1.out \
		-x "gyo_delete -s 1=k < $(atf_get_srcdir)/a_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_1.out \
		-x "cat $(atf_get_srcdir)/a_with_eor.in |" \
		   "gyo_delete -s 1=k"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_1.out \
		-x "cat $(atf_get_srcdir)/a_with_eor.in |" \
		   "gyo_delete -s 1=k -"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_2.out \
		-x "gyo_delete 1=k" \
		   "$(atf_get_srcdir)/a_with_eor.in" \
		   "$(atf_get_srcdir)/a_with_eor.in" \
		   "$(atf_get_srcdir)/a_with_eor.in"
}

atf_test_case a_without_eor
a_without_eor_head() {
	atf_set "descr" "Verify a normal file excluding a LF before EoF"
}

a_without_eor_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_without_eor_1.out \
		-x "gyo_delete 1=k $(atf_get_srcdir)/a_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_without_eor_1.out \
		-x "gyo_delete 1=k < $(atf_get_srcdir)/a_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_without_eor_1.out \
		-x "cat $(atf_get_srcdir)/a_without_eor.in |" \
		   "gyo_delete 1=k"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_without_eor_1.out \
		-x "cat $(atf_get_srcdir)/a_without_eor.in |" \
		   "gyo_delete 1=k -"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_without_eor_1.out \
		-x "gyo_delete 1/10=k $(atf_get_srcdir)/a_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_without_eor_1.out \
		-x "gyo_delete 10/1=k $(atf_get_srcdir)/a_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_without_eor_2.out \
		-x "gyo_delete 1=k" \
		   "$(atf_get_srcdir)/a_without_eor.in" \
		   "$(atf_get_srcdir)/a_without_eor.in" \
		   "$(atf_get_srcdir)/a_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_without_eor_3.out \
		-x "gyo_delete 5=k 1=k 3=k" \
		   "$(atf_get_srcdir)/a_without_eor.in" \
		   "$(atf_get_srcdir)/a_without_eor.in"
}

atf_test_case opt_s_a_without_eor
opt_s_a_without_eor_head() {
	atf_set "descr" "Verify a normal file excluding a LF before EoF (with -s)"
}

opt_s_a_without_eor_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_a_without_eor_1.out \
		-x "gyo_delete -s 1=k $(atf_get_srcdir)/a_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_a_without_eor_1.out \
		-x "gyo_delete -s 1=k < $(atf_get_srcdir)/a_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_a_without_eor_1.out \
		-x "cat $(atf_get_srcdir)/a_without_eor.in |" \
		   "gyo_delete -s 1=k"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_a_without_eor_1.out \
		-x "cat $(atf_get_srcdir)/a_without_eor.in |" \
		   "gyo_delete -s 1=k -"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_a_without_eor_2.out \
		-x "gyo_delete -s 1=k" \
		   "$(atf_get_srcdir)/a_without_eor.in" \
		   "$(atf_get_srcdir)/a_without_eor.in" \
		   "$(atf_get_srcdir)/a_without_eor.in"
}

atf_test_case fl_with_eor
fl_with_eor_head() {
	atf_set "descr" "Verify a one column file including a LF before EoF"
}

fl_with_eor_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/fl_with_eor_1.out \
		-x "gyo_delete 1= $(atf_get_srcdir)/fl_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/fl_with_eor_2.out \
		-x "gyo_delete 1=b $(atf_get_srcdir)/fl_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/fl_with_eor_3.out \
		-x "gyo_delete 1=k $(atf_get_srcdir)/fl_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/fl_with_eor_4.out \
		-x "gyo_delete 2=  $(atf_get_srcdir)/fl_with_eor.in"
}

atf_test_case opt_s_fl_with_eor
opt_s_fl_with_eor_head() {
	atf_set "descr" "Verify a one column file including a LF before EoF (with -s)"
}

opt_s_fl_with_eor_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/fl_with_eor_1.out \
		-x "gyo_delete -s 1= $(atf_get_srcdir)/fl_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_fl_with_eor_2.out \
		-x "gyo_delete -s 1=b $(atf_get_srcdir)/fl_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_fl_with_eor_3.out \
		-x "gyo_delete -s 1=k $(atf_get_srcdir)/fl_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_fl_with_eor_4.out \
		-x "gyo_delete -s 2=  $(atf_get_srcdir)/fl_with_eor.in"
}

atf_test_case data_with_eor
data_with_eor_head() {
	atf_set "descr" "Verify a normal file including a LF before EoF"
}

data_with_eor_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_with_eor_1.out \
		-x "gyo_delete 1=k $(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_with_eor_1.out \
		-x "gyo_delete 1=k < $(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_with_eor_1.out \
		-x "cat $(atf_get_srcdir)/data_with_eor.in |" \
		   "gyo_delete 1=k"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_with_eor_1.out \
		-x "cat $(atf_get_srcdir)/data_with_eor.in |" \
		   "gyo_delete 1=k -"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_with_eor_2.out \
		-x "gyo_delete 1=k" \
		   "$(atf_get_srcdir)/data_with_eor.in" \
		   "$(atf_get_srcdir)/data_with_eor.in" \
		   "$(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_with_eor_3.out \
		-x "gyo_delete 2=bb 4=dd" \
		   "$(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_with_eor_4.out \
		-x "gyo_delete 2=bb 9=dd" \
		   "$(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_with_eor_5.out \
		-x "gyo_delete 2=bb" \
		   "$(atf_get_srcdir)/data_with_eor.in" \
		   "$(atf_get_srcdir)/a_with_eor.in" \
		   "$(atf_get_srcdir)/empty.in" \
		   "$(atf_get_srcdir)/a_with_eor.in"
}

atf_test_case opt_s_data_with_eor
opt_s_data_with_eor_head() {
	atf_set "descr" "Verify a normal file including a LF before EoF (with -d)"
}

opt_s_data_with_eor_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_data_with_eor_1.out \
		-x "gyo_delete -s 1=k $(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_data_with_eor_1.out \
		-x "gyo_delete -s 1=k < $(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_data_with_eor_1.out \
		-x "cat $(atf_get_srcdir)/data_with_eor.in |" \
		   "gyo_delete -s 1=k"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_data_with_eor_1.out \
		-x "cat $(atf_get_srcdir)/data_with_eor.in |" \
		   "gyo_delete -s 1=k -"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_data_with_eor_2.out \
		-x "gyo_delete -s 1=k" \
		   "$(atf_get_srcdir)/data_with_eor.in" \
		   "$(atf_get_srcdir)/data_with_eor.in" \
		   "$(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_data_with_eor_5.out \
		-x "gyo_delete -s 2=bb" \
		   "$(atf_get_srcdir)/data_with_eor.in" \
		   "$(atf_get_srcdir)/a_with_eor.in" \
		   "$(atf_get_srcdir)/empty.in" \
		   "$(atf_get_srcdir)/a_with_eor.in"
}

atf_test_case data_without_eor
data_without_eor_head() {
	atf_set "descr" "Verify a normal file including a LF before EoF"
}

data_without_eor_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_without_eor_1.out \
		-x "gyo_delete 1=k $(atf_get_srcdir)/data_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_without_eor_1.out \
		-x "gyo_delete 1=k < $(atf_get_srcdir)/data_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_without_eor_1.out \
		-x "cat $(atf_get_srcdir)/data_without_eor.in |" \
		   "gyo_delete 1=k"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_without_eor_1.out \
		-x "cat $(atf_get_srcdir)/data_without_eor.in |" \
		   "gyo_delete 1=k -"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_without_eor_2.out \
		-x "gyo_delete 1=k" \
		   "$(atf_get_srcdir)/data_without_eor.in" \
		   "$(atf_get_srcdir)/data_without_eor.in" \
		   "$(atf_get_srcdir)/data_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_without_eor_3.out \
		-x "gyo_delete 2=bb 4=dd" \
		   "$(atf_get_srcdir)/data_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_without_eor_4.out \
		-x "gyo_delete 2=bb 9=dd" \
		   "$(atf_get_srcdir)/data_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_without_eor_5.out \
		-x "gyo_delete 2=bb" \
		   "$(atf_get_srcdir)/data_without_eor.in" \
		   "$(atf_get_srcdir)/a_without_eor.in" \
		   "$(atf_get_srcdir)/empty.in" \
		   "$(atf_get_srcdir)/a_without_eor.in"
}

atf_test_case opt_s_data_without_eor
opt_s_data_without_eor_head() {
	atf_set "descr" "Verify a normal file including a LF before EoF (with -s)"
}

opt_s_data_without_eor_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_data_without_eor_1.out \
		-x "gyo_delete -s 1=k $(atf_get_srcdir)/data_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_data_without_eor_1.out \
		-x "gyo_delete -s 1=k < $(atf_get_srcdir)/data_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_data_without_eor_1.out \
		-x "cat $(atf_get_srcdir)/data_without_eor.in |" \
		   "gyo_delete -s 1=k"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_data_without_eor_1.out \
		-x "cat $(atf_get_srcdir)/data_without_eor.in |" \
		   "gyo_delete -s 1=k -"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_data_without_eor_2.out \
		-x "gyo_delete -s 1=k" \
		   "$(atf_get_srcdir)/data_without_eor.in" \
		   "$(atf_get_srcdir)/data_without_eor.in" \
		   "$(atf_get_srcdir)/data_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_data_without_eor_5.out \
		-x "gyo_delete -s 2=bb" \
		   "$(atf_get_srcdir)/data_without_eor.in" \
		   "$(atf_get_srcdir)/a_without_eor.in" \
		   "$(atf_get_srcdir)/empty.in" \
		   "$(atf_get_srcdir)/a_without_eor.in"
}

atf_test_case and_condition
and_condition_head() {
	atf_set "descr" "Verify AND condition"
}

and_condition_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/and_1.out \
		-x "gyo_delete 1=aa" \
		   "$(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/and_2.out \
		-x "gyo_delete 1=aa 2=bb" \
		   "$(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/and_3.out \
		-x "gyo_delete 1=aa 2=bb 3=cc" \
		   "$(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/and_4.out \
		-x "gyo_delete 1=aa 2=bb 3=cc 4=dd" \
		   "$(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/and_5.out \
		-x "gyo_delete 1=aa 2=bb 3=cc 4=dd 5=ee" \
		   "$(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/and_6.out \
		-x "gyo_delete 1=aa 2=bb 3=cc 4=dd 5=ee 6=ff" \
		   "$(atf_get_srcdir)/data_with_eor.in"
}

atf_test_case or_condition
or_condition_head() {
	atf_set "descr" "Verify OR condition"
}

or_condition_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/or_1.out \
		-x "gyo_delete -o 2=" \
		   "$(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/or_2.out \
		-x "gyo_delete -o 2= 3=" \
		   "$(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/or_3.out \
		-x "gyo_delete -o 2= 3= 4=" \
		   "$(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/or_4.out \
		-x "gyo_delete -o 2= 3= 4= 5=" \
		   "$(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/or_5.out \
		-x "gyo_delete -o 2= 3= 4= 5= 6=" \
		   "$(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/or_6.out \
		-x "gyo_delete -o 2= 2=2" \
		   "$(atf_get_srcdir)/empty.in"
}

atf_test_case greaterthan
greaterthen_head() {
	atf_set "descr" "Verify GREATERTHAN condition"
}

greaterthan_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/date_with_eor_1.out \
		-x "gyo_delete 3'>'20130202" \
		   "$(atf_get_srcdir)/date_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/date_with_eor_2.out \
		-x "gyo_delete 3'>'20130202 4'>'20150404" \
		   "$(atf_get_srcdir)/date_with_eor.in"
}

atf_test_case opt_s_greaterthan
opt_s_greaterthen_head() {
	atf_set "descr" "Verify GREATERTHAN condition (with -s)"
}

opt_s_greaterthan_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/date_with_eor_1.out \
		-x "gyo_delete -s 3'>'20130202" \
		   "$(atf_get_srcdir)/date_with_eor.in"
}

atf_test_case opt_s_greaterthan_or_equal_to 
opt_s_greaterthen_or_equal_to_head() {
	atf_set "descr" "Verify GREATERTHAN condition (with -s)"
}

opt_s_greaterthan_or_equal_to_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_date_with_eor_1.out \
		-x "gyo_delete -s 3'>='20150202" \
		   "$(atf_get_srcdir)/date_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_date_with_eor_1.out \
		-x "gyo_delete -s 3'=>'20150202" \
		   "$(atf_get_srcdir)/date_with_eor.in"
}

atf_test_case lesserthan
lesserthan_head() {
	atf_set "descr" "Verify LESSERTHAN condition"
}

lesserthan_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/date_with_eor_3.out \
		-x "gyo_delete 3'<'20130203" \
		   "$(atf_get_srcdir)/date_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/date_with_eor_4.out \
		-x "gyo_delete 3'<'20170101 5'<'20160404" \
		   "$(atf_get_srcdir)/date_with_eor.in"
}

atf_test_case opt_s_lesserthan
opt_s_lesserthan_head() {
	atf_set "descr" "Verify LESSERTHAN condition (with -s)"
}

opt_s_lesserthan_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/date_with_eor_3.out \
		-x "gyo_delete 3'<'20130203" \
		   "$(atf_get_srcdir)/date_with_eor.in"
}

atf_test_case opt_s_lesserthan_or_equal_to
opt_s_lesserthan_or_equal_to_head() {
	atf_set "descr" "Verify LESSERTHAN condition (with -s)"
}

opt_s_lesserthan_or_equal_to_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_date_with_eor_3.out \
		-x "gyo_delete -s 3'<='20140202" \
		   "$(atf_get_srcdir)/date_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_date_with_eor_3.out \
		-x "gyo_delete -s 3'=<'20140202" \
		   "$(atf_get_srcdir)/date_with_eor.in"
}

atf_test_case multiple_and_condition
multiple_and_condition_head() {
	atf_set "descr" "Verity MULTIPLE-AND condition"
}

multiple_and_condition_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/multiple_and_condition_1.out \
		-x "gyo_delete 2= 2=bb" \
		   "$(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/multiple_and_condition_2.out \
		-x "gyo_delete 3'>'20130202 3'<'20160202" \
		   "$(atf_get_srcdir)/date_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/multiple_and_condition_3.out \
		-x "gyo_delete 3'<'20130202 3'>'20160202" \
		   "$(atf_get_srcdir)/date_with_eor.in"
}

atf_test_case multiple_or_condition
multiple_or_condition_head() {
	atf_set "descr" "Verity MULTIPLE-OR condition"
}

multiple_or_condition_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/multiple_or_condition_1.out \
		-x "gyo_delete -o 2= 2=bb" \
		   "$(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/multiple_or_condition_2.out \
		-x "gyo_delete -o 3'>'20130202 3'<'20160202" \
		   "$(atf_get_srcdir)/date_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/multiple_or_condition_3.out \
		-x "gyo_delete -o 3=20130202 3=20160202" \
		   "$(atf_get_srcdir)/date_with_eor.in"
}

atf_test_case join
join_head() {
	atf_set "descr" "Verity JOIN process"
}

join_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/join_1.out \
		-x "gyo_delete" \
		   "1:$(atf_get_srcdir)/key.ssv:2" \
		   "$(atf_get_srcdir)/date_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/join_2.out \
		-x "gyo_delete" \
		   "1:$(atf_get_srcdir)/key.ssv:3" \
		   "$(atf_get_srcdir)/date_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/join_3.out \
		-x "gyo_delete" \
		   "4:$(atf_get_srcdir)/key.ssv:3" \
		   "$(atf_get_srcdir)/date_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/join_4.out \
		-x "gyo_delete -o " \
		   "1:$(atf_get_srcdir)/key.ssv:2" \
		   "4=20160303" \
		   "$(atf_get_srcdir)/date_with_eor.in"
}

atf_test_case option_n
option_n_head() {
	atf_set "descr" "Verity -n process"
}

option_n_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/option_n_1.out \
		-x "echo 1 2 3 4 5 |" \
		   "gyo_delete -n 1=1 && echo outputed"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/option_n_2.out \
		-x "echo 1 2 3 4 5 |" \
		   "gyo_delete -n 1=2 && echo outputed"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/option_n_2.out \
		-x "echo 1 2 3 4 5 |" \
		   "gyo_delete -n 1=1 || echo outputed"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/option_n_1.out \
		-x "echo 1 2 3 4 5 |" \
		   "gyo_delete -n 1=2 || echo outputed"
}

atf_test_case numeric_compare
numeric_compare_head() {
	atf_set "descr" "Verity -N process"
}

numeric_compare_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/numeric_compare_1.out \
		-x "echo 10 20 30 40 50 |" \
		   "gyo_delete 5'>'6"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/numeric_compare_2.out \
		-x "echo 10 20 30 40 50 |" \
		   "gyo_delete -N 5'>'6"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/numeric_compare_3.out \
		-x "cat $(atf_get_srcdir)/nums_with_eor.in |" \
		   "gyo_delete -N 2'>'1"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/numeric_compare_4.out \
		-x "cat $(atf_get_srcdir)/nums_with_eor.in |" \
		   "gyo_delete -N 4'>'1"
}

atf_test_case remove_first_line
remove_first_line_head() {
	atf_set "descr" "Verify a -1 option"
}

remove_first_line_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/remove_first_line_1.out \
		-x "gyo_delete -1 -N 2'<'0" \
		   "$(atf_get_srcdir)/price.tag"
}

atf_test_case atmark
atmark_head() {
	atf_set "descr" "Verify an atmark process"
}

atmark_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/atmark_1.out \
		-x "gyo_delete -1 -N 1'>'0" \
		   "$(atf_get_srcdir)/price2.tag"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/atmark_2.out \
		-x "gyo_delete -1 -N 2'>'0" \
		   "$(atf_get_srcdir)/price2.tag"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/atmark_3.out \
		-x "gyo_delete -1 1." \
		   "$(atf_get_srcdir)/price2.tag"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/atmark_4.out \
		-x "gyo_delete -1 2." \
		   "$(atf_get_srcdir)/price2.tag"
}

atf_test_case opt_s_atmark
opt_s_atmark_head() {
	atf_set "descr" "Verify an atmark process (with -s)"
}

opt_s_atmark_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_atmark_3.out \
		-x "gyo_delete -s 1." \
		   "$(atf_get_srcdir)/price2.tag"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_atmark_4.out \
		-x "gyo_delete -s 2." \
		   "$(atf_get_srcdir)/price2.tag"
}

atf_test_case select
select_head() {
	atf_set "descr" "Verify a select process"
}

select_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/select_1.out \
		-x "gyo_delete -1 -N 1'>'0 1 2 3/1" \
		   "$(atf_get_srcdir)/price2.tag"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/select_2.out \
		-x "gyo_delete -1 -N 2'>'0 1 2 3/1" \
		   "$(atf_get_srcdir)/price2.tag"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/select_3.out \
		-x "gyo_delete -1 1. 3 2/1" \
		   "$(atf_get_srcdir)/price2.tag"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/select_4.out \
		-x "gyo_delete -1 2. 3 2/1" \
		   "$(atf_get_srcdir)/price2.tag"
}

atf_test_case empty_output
empty_output_head() {
	atf_set "descr" "Verify an empty output process"
}

empty_output_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_output_1.out \
		-x "echo |" \
		   "gyo_delete -@ 000000 1.NOT 1/5"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_output_2.out \
		-x "echo |" \
		   "gyo_delete -@ '  @__ ' 1.NOT 1/5"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_output_3.out \
		-x "echo |" \
		   "gyo_delete 1. 1/5"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_output_4.out \
		-x "echo 1 2 3 4 5 |" \
		   "gyo_delete -e 1.1"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_output_5.out \
		-x "echo |" \
		   "gyo_delete -e 1. 1/5"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_output_6.out \
		-x "echo |" \
		   "gyo_delete -e -@ 0 1. 1/5"
}

atf_test_case zero
zero_head() {
	atf_set "descr" "Verify a zero retu process"
}

zero_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/zero_1.out \
		-x "echo 1 2 3 4 5 |" \
		   "gyo_delete 1=0 0 0 1 0 0 6 6"
}

atf_test_case not_match
not_match_head() {
	atf_set "descr" "Verify a not-match condition process"
}

not_match_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/not_match_1.out \
		-x "gyo_delete 2!bb $(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/not_match_2.out \
		-x "gyo_delete 2! $(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/not_match_3.out \
		-x "gyo_delete 2! 3! 4! $(atf_get_srcdir)/data_with_eor.in"
}

atf_test_case opt_s_not_match
opt_s_not_match_head() {
	atf_set "descr" "Verify a not-match condition process (with -s)"
}

opt_s_not_match_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_not_match_1.out \
		-x "gyo_delete -s 2!bb $(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/opt_s_not_match_2.out \
		-x "gyo_delete -s 2! $(atf_get_srcdir)/data_with_eor.in"
}

atf_test_case long
long_head() {
	atf_set "descr" "Verify a long data process"
}

long_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/long_data_1.out \
		-x "gyo_delete 2!2 $(atf_get_srcdir)/long_data.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/long_data_1.out \
		-x "gyo_delete 200000!200000 $(atf_get_srcdir)/long_data.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/long_data_2.out \
		-x "gyo_delete 2!3 $(atf_get_srcdir)/long_data.in"
}

atf_test_case opt_s_long
opt_s_long_head() {
	atf_set "descr" "Verify a long data process (with -s)"
}

opt_s_long_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/long_data_1.out \
		-x "gyo_delete 2!2 $(atf_get_srcdir)/long_data.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/long_data_1.out \
		-x "gyo_delete 200000!200000 $(atf_get_srcdir)/long_data.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/long_data_2.out \
		-x "gyo_delete 2!3 $(atf_get_srcdir)/long_data.in"
}

atf_init_test_cases()
{
	atf_add_test_case empty
	atf_add_test_case a_with_eor
	atf_add_test_case a_without_eor
	atf_add_test_case fl_with_eor
	atf_add_test_case data_with_eor
	atf_add_test_case data_without_eor
	atf_add_test_case and_condition
	atf_add_test_case or_condition
	atf_add_test_case greaterthan
	atf_add_test_case lesserthan
	atf_add_test_case multiple_and_condition
	atf_add_test_case multiple_or_condition
	atf_add_test_case join
	atf_add_test_case option_n
	atf_add_test_case numeric_compare
	atf_add_test_case remove_first_line
	atf_add_test_case atmark
	atf_add_test_case select
	atf_add_test_case empty_output
	atf_add_test_case zero
	atf_add_test_case not_match
	atf_add_test_case long

	atf_add_test_case opt_s_empty
	atf_add_test_case opt_s_a_with_eor
	atf_add_test_case opt_s_a_without_eor
	atf_add_test_case opt_s_fl_with_eor
	atf_add_test_case opt_s_data_with_eor
	atf_add_test_case opt_s_data_without_eor
	atf_add_test_case opt_s_greaterthan
	atf_add_test_case opt_s_lesserthan
	atf_add_test_case opt_s_greaterthan_or_equal_to
	atf_add_test_case opt_s_lesserthan_or_equal_to
	atf_add_test_case opt_s_atmark
	atf_add_test_case opt_s_not_match
	atf_add_test_case opt_s_long
}
