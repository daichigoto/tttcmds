#!/usr/bin/env atf-sh
# 
#  Copyright (c) 2016,2017,2019 Daichi GOTO
#  All rights reserved.
#  
#  Redistribution and use in source and binary forms, with or without
#  modifigation, are permitted provided that the following conditions are 
#  met: 
#  
#  1. Redistributions of source code must retain the above copyright 
#     notice, this list of conditions and the following disclaimer. 
#  2. Redistributions in binary form must reproduce the above copyright 
#     notice, this list of conditions and the following disclaimer in the 
#     documentation and/or other materials provided with the distribution. 
#  
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#  

atf_test_case empty
empty_head() {
	atf_set "descr" "Verify an empty file"
}

empty_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "retu_assign 1.a " \
		   "$(atf_get_srcdir)/empty.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "retu_assign 1.a" \
		   "< $(atf_get_srcdir)/empty.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "cat $(atf_get_srcdir)/empty.in |" \
		   "retu_assign 1.a"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "cat $(atf_get_srcdir)/empty.in |" \
		   "retu_assign 1.a -"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "retu_assign" \
		   "1.a" \
		   "$(atf_get_srcdir)/empty.in" \
		   "$(atf_get_srcdir)/empty.in" \
		   "$(atf_get_srcdir)/empty.in"
}

atf_test_case a_with_eor
a_with_eor_head() {
	atf_set "descr" "Verify a normal file including a LF before EoF"
}

a_with_eor_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_1.out \
		-x "retu_assign" \
		   "1.b" \
		   "$(atf_get_srcdir)/a_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_1.out \
		-x "retu_assign " \
		   "1.a.b" \
		   "< $(atf_get_srcdir)/a_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_1.out \
		-x "cat $(atf_get_srcdir)/a_with_eor.in |" \
		   "retu_assign" \
		   "1!b!b"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_2.out \
		-x "cat $(atf_get_srcdir)/a_with_eor.in |" \
		   "retu_assign" \
		   "1.aaa -"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_3.out \
		-x "retu_assign" \
		   "1.'ab  c @__'" \
		   "$(atf_get_srcdir)/a_with_eor.in" \
		   "$(atf_get_srcdir)/a_with_eor.in" \
		   "$(atf_get_srcdir)/a_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_4.out \
		-x "retu_assign" \
		   "1." \
		   "$(atf_get_srcdir)/a_with_eor.in" \
		   "$(atf_get_srcdir)/a_with_eor.in" \
		   "$(atf_get_srcdir)/a_with_eor.in"
}

atf_test_case a_without_eor
a_without_eor_head() {
	atf_set "descr" "Verify a normal file excluding a LF before EoF"
}

a_without_eor_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_without_eor_1.out \
		-x "retu_assign" \
		   "1.b" \
		   "$(atf_get_srcdir)/a_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_without_eor_1.out \
		-x "retu_assign " \
		   "1.a.b" \
		   "< $(atf_get_srcdir)/a_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_without_eor_1.out \
		-x "cat $(atf_get_srcdir)/a_without_eor.in |" \
		   "retu_assign" \
		   "1!b!b"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_without_eor_2.out \
		-x "cat $(atf_get_srcdir)/a_without_eor.in |" \
		   "retu_assign" \
		   "1.aaa -"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_without_eor_3.out \
		-x "retu_assign" \
		   "1.'ab  c @__'" \
		   "$(atf_get_srcdir)/a_without_eor.in" \
		   "$(atf_get_srcdir)/a_without_eor.in" \
		   "$(atf_get_srcdir)/a_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_without_eor_4.out \
		-x "retu_assign" \
		   "1." \
		   "$(atf_get_srcdir)/a_without_eor.in" \
		   "$(atf_get_srcdir)/a_without_eor.in" \
		   "$(atf_get_srcdir)/a_without_eor.in"
}

atf_test_case fl_with_eor
fl_with_eor_head() {
	atf_set "descr" "Verify a one column file including a LF before EoF"
}

fl_with_eor_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/fl_with_eor_1.out \
		-x "retu_assign" \
		   "1..a '1!!B'" \
		   "$(atf_get_srcdir)/fl_with_eor.in"
}

atf_test_case data_with_eor
data_with_eor_head() {
	atf_set "descr" "Verify a normal file including a LF before EoF"
}

data_with_eor_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_with_eor_1.out \
		-x "retu_assign" \
		   "1.AA 3.CC 5/7." \
		   "$(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_with_eor_2.out \
		-x "retu_assign" \
		   "1.___ 3.@@ 5/7.' '" \
		   "$(atf_get_srcdir)/data_with_eor.in"
}

atf_test_case data_without_eor
data_without_eor_head() {
	atf_set "descr" "Verify a normal file excluding a LF before EoF"
}

data_without_eor_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_without_eor_1.out \
		-x "retu_assign" \
		   "1.AA 3.CC 5/7." \
		   "$(atf_get_srcdir)/data_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_without_eor_2.out \
		-x "retu_assign" \
		   "1.___ 3.@@ 5/7.' '" \
		   "$(atf_get_srcdir)/data_without_eor.in"
}

atf_test_case longdata_without_eor
longdata_without_eor_head() {
	atf_set "descr" "Verify a longdata process"
}

longdata_without_eor_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/longdata_without_eor_1.out \
		-x "retu_assign" \
		   "1.A 2.B" \
		   "$(atf_get_srcdir)/longdata_without_eor.in"
}

atf_test_case swap_with_eor
swap_with_eor_head() {
	atf_set "descr" "Verify a swap process"
}

swap_with_eor_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/swap_with_eor_1.out \
		-x "retu_assign" \
		   "1/4..'1 2 3 @__ _'" \
		   "$(atf_get_srcdir)/swap_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/swap_with_eor_2.out \
		-x "retu_assign" \
		   "1..'1 2 3 @__ _'" \
		   "2..'1 2 3 @__ _'" \
		   "$(atf_get_srcdir)/swap_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/swap_with_eor_3.out \
		-x "retu_assign" \
		   "1/4!!'1 2 3 @__ _'" \
		   "$(atf_get_srcdir)/swap_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/swap_with_eor_4.out \
		-x "retu_assign" \
		   "1!!'1 2 3 @__ _'" \
		   "4..'1 2 3 @__ _'" \
		   "$(atf_get_srcdir)/swap_with_eor.in"
}

atf_test_case join
join_head() {
	atf_set "descr" "Verify a join process"
}

join_body() {
 	atf_check -s ignore \
 		-o file:$(atf_get_srcdir)/join_1.ssv \
 		-x "retu_assign" \
 		   "2:$(atf_get_srcdir)/join_master_name.ssv:1:2" \
 		   "$(atf_get_srcdir)/join_data.ssv"
 	atf_check -s ignore \
 		-o file:$(atf_get_srcdir)/join_1.ssv \
 		-x "cat $(atf_get_srcdir)/join_master_name.ssv |" \
		   "retu_assign" \
 		   "2:-:1:2" \
 		   "$(atf_get_srcdir)/join_data.ssv"
 	atf_check -s ignore \
 		-o file:$(atf_get_srcdir)/join_2.ssv \
 		-x "retu_assign" \
 		   "2:$(atf_get_srcdir)/join_master_name.ssv:1:2" \
 		   "3:$(atf_get_srcdir)/join_master_price.ssv:1:2/4" \
 		   "$(atf_get_srcdir)/join_data.ssv"
 	atf_check -s ignore \
 		-o file:$(atf_get_srcdir)/join_3.ssv \
 		-x "retu_assign" \
 		   "2:$(atf_get_srcdir)/join_master_name.ssv:1:2" \
 		   "3:$(atf_get_srcdir)/join_master_price.ssv:1:2/4" \
 		   "4:$(atf_get_srcdir)/join_master_tags.ssv:1:2,3,4" \
 		   "$(atf_get_srcdir)/join_data.ssv"
 	atf_check -s ignore \
 		-o file:$(atf_get_srcdir)/join_4.ssv \
 		-x "retu_assign" \
 		   "2:$(atf_get_srcdir)/join_master_tags.ssv:1:2" \
 		   "3:$(atf_get_srcdir)/join_master_tags.ssv:1:3" \
 		   "4:$(atf_get_srcdir)/join_master_tags.ssv:1:4" \
 		   "$(atf_get_srcdir)/join_data.ssv"
}

atf_test_case atmark
atmark_head() {
	atf_set "descr" "Verify a join process"
}

atmark_body() {
 	atf_check -s ignore \
 		-o file:$(atf_get_srcdir)/atmark_1.ssv \
 		-x "retu_assign -@ NONE" \
 		   "2:$(atf_get_srcdir)/join_master_name.ssv:1:2" \
 		   "$(atf_get_srcdir)/join_data.ssv"
 	atf_check -s ignore \
 		-o file:$(atf_get_srcdir)/atmark_1.ssv \
 		-x "cat $(atf_get_srcdir)/join_master_name.ssv |" \
		   "retu_assign -@ NONE" \
 		   "2:-:1:2" \
 		   "$(atf_get_srcdir)/join_data.ssv"
 	atf_check -s ignore \
 		-o file:$(atf_get_srcdir)/atmark_2.ssv \
 		-x "retu_assign -@ -" \
 		   "2:$(atf_get_srcdir)/join_master_name.ssv:1:2" \
 		   "3:$(atf_get_srcdir)/join_master_price.ssv:1:2/4" \
 		   "$(atf_get_srcdir)/join_data.ssv"
 	atf_check -s ignore \
 		-o file:$(atf_get_srcdir)/atmark_3.ssv \
 		-x "retu_assign -@ ç„¡" \
 		   "2:$(atf_get_srcdir)/join_master_name.ssv:1:2" \
 		   "3:$(atf_get_srcdir)/join_master_price.ssv:1:2/4" \
 		   "4:$(atf_get_srcdir)/join_master_tags.ssv:1:2,3,4" \
 		   "$(atf_get_srcdir)/join_data.ssv"
 	atf_check -s ignore \
 		-o file:$(atf_get_srcdir)/atmark_4.ssv \
 		-x "retu_assign -@ =" \
 		   "2:$(atf_get_srcdir)/join_master_tags.ssv:1:2" \
 		   "3:$(atf_get_srcdir)/join_master_tags.ssv:1:3" \
 		   "4:$(atf_get_srcdir)/join_master_tags.ssv:1:4" \
 		   "$(atf_get_srcdir)/join_data.ssv"
}

atf_test_case ssvstr_assign
ssvstr_assign_head() {
	atf_set "descr" "Verify the SSV string assignment process"
}

ssvstr_assign_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/ssvstr_assign_output_01.ssv \
		-x "retu_assign" \
		   "1/12.@" \
		   "$(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/ssvstr_assign_output_02.ssv \
		-x "retu_assign -s" \
		   "1/12.@" \
		   "$(atf_get_srcdir)/data_with_eor.in"
}

atf_test_case simpleassign_file
simpleassign_file_head() {
	atf_set "descr" "Verify the simple-assignment with -f process"
}

simpleassign_file_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/simpleassign_f_output_01.ssv \
		-x "retu_assign" \
		   "-f $(atf_get_srcdir)/simpleassign_f_input_01.ssv" \
		   "1.4 4.6 7.3" \
		   "$(atf_get_srcdir)/data_with_eor.in"
}

atf_test_case mode
mode_head() {
	atf_set "descr" "Verify the mode option"
}

mode_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/mode_output_01.ssv \
		-x "echo @ @ @ @ @ |" \
		   "retu_assign -m simple" \
		   "2:name.ssv:1:2" \
		   "4:name.ssv:1:3"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/mode_output_02.ssv \
		-x "echo @ @ @ @ @ |" \
		   "retu_assign -m condition" \
		   "2::=::="
}


atf_init_test_cases()
{
	atf_add_test_case empty
	atf_add_test_case a_with_eor
	atf_add_test_case a_without_eor
	atf_add_test_case fl_with_eor
	atf_add_test_case data_with_eor
	atf_add_test_case data_without_eor
	atf_add_test_case longdata_without_eor
	atf_add_test_case swap_with_eor
	atf_add_test_case join
	atf_add_test_case atmark
	atf_add_test_case ssvstr_assign
	atf_add_test_case simpleassign_file
	atf_add_test_case mode
}
