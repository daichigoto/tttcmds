#!/usr/bin/env atf-sh
# 
#  Copyright (c) 2016,2017,2018 Daichi GOTO
#  All rights reserved.
#  
#  Redistribution and use in source and binary forms, with or without
#  modifigation, are permitted provided that the following conditions are 
#  met: 
#  
#  1. Redistributions of source code must retain the above copyright 
#     notice, this list of conditions and the following disclaimer. 
#  2. Redistributions in binary form must reproduce the above copyright 
#     notice, this list of conditions and the following disclaimer in the 
#     documentation and/or other materials provided with the distribution. 
#  
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#  

atf_test_case empty
empty_head() {
	atf_set "descr" "Verify an empty file"
}

empty_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M" \
		   "$(atf_get_srcdir)/empty.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "retu_dateformat 1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M" \
		   "< $(atf_get_srcdir)/empty.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "cat $(atf_get_srcdir)/empty.in |" \
		   "retu_dateformat 1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "cat $(atf_get_srcdir)/empty.in |" \
		   "retu_dateformat 1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M -"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/empty_1.out \
		-x "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M" \
		   "$(atf_get_srcdir)/empty.in" \
		   "$(atf_get_srcdir)/empty.in" \
		   "$(atf_get_srcdir)/empty.in"
}

atf_test_case a_with_eor
a_with_eor_head() {
	atf_set "descr" "Verify a normal file including a LF before EoF"
}

a_with_eor_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_1.out \
		-x "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M" \
		   "$(atf_get_srcdir)/a_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_1.out \
		-x "retu_dateformat " \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M" \
		   "< $(atf_get_srcdir)/a_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_1.out \
		-x "cat $(atf_get_srcdir)/a_with_eor.in |" \
		   "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_1.out \
		-x "cat $(atf_get_srcdir)/a_with_eor.in |" \
		   "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M -"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_with_eor_2.out \
		-x "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M" \
		   "$(atf_get_srcdir)/a_with_eor.in" \
		   "$(atf_get_srcdir)/a_with_eor.in" \
		   "$(atf_get_srcdir)/a_with_eor.in"
}

atf_test_case a_without_eor
a_without_eor_head() {
	atf_set "descr" "Verify a normal file excluding a LF before EoF"
}

a_without_eor_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_without_eor_1.out \
		-x "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M" \
		   "$(atf_get_srcdir)/a_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_without_eor_1.out \
		-x "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M" \
		   "< $(atf_get_srcdir)/a_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_without_eor_1.out \
		-x "cat $(atf_get_srcdir)/a_without_eor.in |" \
		   "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_without_eor_1.out \
		-x "cat $(atf_get_srcdir)/a_without_eor.in |" \
		   "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M -"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/a_without_eor_2.out \
		-x "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M" \
		   "$(atf_get_srcdir)/a_without_eor.in" \
		   "$(atf_get_srcdir)/a_without_eor.in" \
		   "$(atf_get_srcdir)/a_without_eor.in"
}

atf_test_case fl_with_eor
fl_with_eor_head() {
	atf_set "descr" "Verify a one column file including a LF before EoF"
}

fl_with_eor_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/fl_with_eor_1.out \
		-x "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M" \
		   "$(atf_get_srcdir)/fl_with_eor.in"
}

atf_test_case data_with_eor
data_with_eor_head() {
	atf_set "descr" "Verify a normal file including a LF before EoF"
}

data_with_eor_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_with_eor_1.out \
		-x "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M" \
		   "$(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_with_eor_1.out \
		-x "retu_dateformat " \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M" \
		   "< $(atf_get_srcdir)/data_with_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_with_eor_1.out \
		-x "cat $(atf_get_srcdir)/data_with_eor.in |" \
		   "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_with_eor_1.out \
		-x "cat $(atf_get_srcdir)/data_with_eor.in |" \
		   "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M -"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_with_eor_2.out \
		-x "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M" \
		   "$(atf_get_srcdir)/data_with_eor.in" \
		   "$(atf_get_srcdir)/data_with_eor.in" \
		   "$(atf_get_srcdir)/data_with_eor.in"
}

atf_test_case data_without_eor
data_without_eor_head() {
	atf_set "descr" "Verify a normal file excluding a LF before EoF"
}

data_without_eor_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_without_eor_1.out \
		-x "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M" \
		   "$(atf_get_srcdir)/data_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_without_eor_1.out \
		-x "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M" \
		   "< $(atf_get_srcdir)/data_without_eor.in"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_without_eor_1.out \
		-x "cat $(atf_get_srcdir)/data_without_eor.in |" \
		   "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_without_eor_1.out \
		-x "cat $(atf_get_srcdir)/data_without_eor.in |" \
		   "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M -"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/data_without_eor_2.out \
		-x "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M" \
		   "$(atf_get_srcdir)/data_without_eor.in" \
		   "$(atf_get_srcdir)/data_without_eor.in" \
		   "$(atf_get_srcdir)/data_without_eor.in"
}

atf_test_case longdata_without_eor
longdata_without_eor_head() {
	atf_set "descr" "Verify a longdata process"
}

longdata_without_eor_body() {
	OS=$(uname)
	case "$OS" in
	Darwin)
		atf_check -s ignore \
		-o file:$(atf_get_srcdir)/longdata_without_eor_1_darwin.out \
		-x "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M" \
		   "$(atf_get_srcdir)/longdata_without_eor.in"
		;;
	FreeBSD)
		if [ "$(uname -U)" -gt 1200000 ]
		then
			atf_check -s ignore \
			-o file:$(atf_get_srcdir)/longdata_without_eor_1_darwin.out \
			-x "retu_dateformat" \
			   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M" \
			   "$(atf_get_srcdir)/longdata_without_eor.in"
		else
			atf_check -s ignore \
			-o file:$(atf_get_srcdir)/longdata_without_eor_1.out \
			-x "retu_dateformat" \
			   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M" \
		   	"$(atf_get_srcdir)/longdata_without_eor.in"
		fi
		;;
	*)
		atf_check -s ignore \
		-o file:$(atf_get_srcdir)/longdata_without_eor_1.out \
		-x "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d\ %H:%M" \
		   "$(atf_get_srcdir)/longdata_without_eor.in"
		;;
	esac
}

atf_test_case format
format_head() {
	atf_set "descr" "Verify a date format transforming process"
}

format_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/format_1.out \
		-x "retu_dateformat" \
		   "1.%Y%m%d%H%M%S.%Y/%m/%d:%H:%M" \
		   "$(atf_get_srcdir)/format_with_eor.in"
 	atf_check -s ignore \
 		-o file:$(atf_get_srcdir)/format_1.out \
 		-x "retu_dateformat" \
 		   "1.%Y%m%d%H%M%S.'%Y/%m/%d %H:%M'" \
 		   "$(atf_get_srcdir)/format_with_eor.in"
 	atf_check -s ignore \
 		-o file:$(atf_get_srcdir)/format_2.out \
 		-x "retu_dateformat" \
 		   "1.'%Y_%m_%d@%H:%M (%S)'.'%Y/%m/%d %H:%M'" \
 		   "$(atf_get_srcdir)/format_with_eor.in"
 	atf_check -s ignore \
 		-o file:$(atf_get_srcdir)/format_3.out \
 		-x "retu_dateformat" \
 		   "1.'%Y_%m_%d@%H:%M (%S)'.'%Y/%m/%d %H:%M'" \
 		   "2~'%Y_%m_%d@%H:%M (%S)'~'%Y/%m/%d %H:%M'" \
 		   "3,'%Y_%m_%d@%H:%M (%S)','%Y/%m/%d %H:%M'" \
 		   "$(atf_get_srcdir)/format_with_eor.in" \
 		   "$(atf_get_srcdir)/format_with_eor.in" \
 		   "$(atf_get_srcdir)/format_with_eor.in"
 	atf_check -s ignore \
 		-o file:$(atf_get_srcdir)/format_4.out \
 		-x "retu_dateformat" \
 		   "1.'%Y_%m_%d@%H:%M (%S)'.''" \
 		   "2~'%Y_%m_%d@%H:%M (%S)'~'%Y/%m/%d %H@%M'" \
 		   "3,'%Y_%m_%d@%H:%M (%S)','%Y/%m/%d %H:%M'" \
 		   "$(atf_get_srcdir)/format_with_eor.in" \
 		   "$(atf_get_srcdir)/format_with_eor.in" \
 		   "$(atf_get_srcdir)/format_with_eor.in"
 	atf_check -s ignore \
 		-o file:$(atf_get_srcdir)/format_5.out \
 		-x "retu_dateformat" \
 		   "1.'%Y_%m_%d@%H:%M (%S)'.''" \
 		   "2~'%Y_%m_%d@%H:%M (%S)'~'@'" \
 		   "3,'%Y_%m_%d@%H:%M (%S)','\@'" \
 		   "$(atf_get_srcdir)/format_with_eor.in" \
 		   "$(atf_get_srcdir)/format_with_eor.in" \
 		   "$(atf_get_srcdir)/format_with_eor.in"
}

atf_test_case locale
locale_head() {
	atf_set "descr" "Verify a locale-based process"
}

locale_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/locale_01.out \
		-x "echo 20170101 20170102 20170103 |" \
		   "env LANG=C retu_dateformat 1/3.%Y%m%d.%a"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/locale_02.out \
		-x "echo 20170101 20170102 20170103 |" \
		   "env LANG=C retu_dateformat 1/3.%Y%m%d.%A"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/locale_03.out \
		-x "echo 20170101 20170102 20170103 |" \
		   "env LANG=ja_JP.UTF-8 retu_dateformat 1/3.%Y%m%d.%a"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/locale_04.out \
		-x "echo 20170101 20170102 20170103 |" \
		   "env LANG=ja_JP.UTF-8 retu_dateformat 1/3.%Y%m%d.%A"
}

atf_test_case shift
shift_head() {
	atf_set "descr" "Verify a shift process"
}

shift_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/shift_1.out \
		-x "echo 20170101 20170102 20170103 |" \
		   "retu_dateformat 1/3.%Y%m%d.%Y%m%d.+7d"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/shift_2.out \
		-x "echo 20170101 20170102 20170103 |" \
		   "retu_dateformat" \
		   "1.%Y%m%d.%Y%m%d.+7d" \
		   "2.%Y%m%d.%Y%m%d.+16d" \
		   "3.%Y%m%d.%Y%m%d.-2m"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/shift_3.out \
		-x "echo 20170101 20170102 20170103 |" \
		   "retu_dateformat" \
		   "1.%Y%m%d.%Y%m%d.+7d" \
		   "2.%Y%m%d.%Y%m%d.+16d" \
		   "3.%Y%m%d.%Y%m%d"
}

atf_test_case 30hours
30hours_head() {
	atf_set "descr" "Verify a 30 hours system treatment"
}

30hours_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/30hours_output_01.ssv \
		-x "cat $(atf_get_srcdir)/30hours_date_01.ssv |" \
		   "retu_dateformat -3 3 1/2.%Y%m%d%H%M%S.%m/%d-%H:%M"
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/30hours_output_02.ssv \
		-x "cat $(atf_get_srcdir)/30hours_date_02.ssv |" \
		   "retu_dateformat 1/2.%Y%m%d%H%M%S.%m/%d-%H:%M"
}

atf_test_case echowhenunmatch
echowhenunmatch_head() {
	atf_set "descr" "Echo value when unmatched"
}

echowhenunmatch_body() {
	atf_check -s ignore \
		-o file:$(atf_get_srcdir)/echowhenunmatch_output_01.ssv \
		-x "cat $(atf_get_srcdir)/echowhenunmatch_date_01.ssv |" \
		   "retu_dateformat -e 1/3.%Y%m%d%H%M%S.%m/%d-%H:%M"
}

atf_init_test_cases()
{
	atf_add_test_case empty
	atf_add_test_case a_with_eor
	atf_add_test_case a_without_eor
	atf_add_test_case fl_with_eor
	atf_add_test_case data_with_eor
	atf_add_test_case data_without_eor
	atf_add_test_case longdata_without_eor
	atf_add_test_case format
	atf_add_test_case locale
	atf_add_test_case shift
	atf_add_test_case 30hours
	atf_add_test_case echowhenunmatch
}
